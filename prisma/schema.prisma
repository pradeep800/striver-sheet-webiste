// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
   relationMode = "prisma"
}
enum Role {
  USER
  PROUSER
  ADMIN
}

enum ProblemState {
  UNATTEMPTED
  REMINDER
  SOLVED
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @default(now()) @map(name: "updated_at")
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
   

  @@map(name: "sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  accounts      Account[]
  sessions      Session[]
  striver_sheet striver_sheet?
  reminders    reminder[]

  Role         Role        @default(USER)

  @@map(name: "users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map(name: "verification_tokens")
}
model striver_sheet {
  id        Int       @id  @default(autoincrement())
  questions question[]
  userSheet  User @relation(fields: [userId],references: [id])
  userId    String @unique
}

model question {
  quesiton_id       Int           @id @default(autoincrement())
  solved  ProblemState
  questionNo Int
  note     note?
  sheet   striver_sheet? @relation(fields: [sheet_id], references: [id])
  sheet_id Int?
}
model note{
  note_id        String   @id @default(cuid())
  title     String
  content   Json?
  published Boolean  @default(false)
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
  author question @relation(fields: [author_id],references: [quesiton_id])
  author_id  Int @unique
}
model reminder{
  reminder_id Int @id
  created_at DateTime @default(now())
  reminder_due_date DateTime
  mail_sended Boolean @default(false)
  user_sheet  User @relation(fields: [user_id],references: [id])
  user_id   String @unique
}